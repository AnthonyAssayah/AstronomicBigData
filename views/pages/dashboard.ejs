<!-- This is the dashboard page, where the user can see the data in cards and graphs -->

<!DOCTYPE html>
<html>

<head>
  <%- include("../partials/headers") %>
    <link rel="stylesheet" type="text/css" href="/css/style.css"><!--ariel ws -->
    <script src="https://cdn.jsdelivr.net/chartist.js/latest/chartist.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <<link href="https://fonts.googleapis.com/css2?family=Lato:wght@400;700&display=swap" rel="stylesheet">

</head>

<body class="" onload="setWs()">
  <div class="wrapper ">
    <%- include("../partials/sidebar") %>
      <div class="main-panel">  
          <div class="content">
            <div class="container-fluid">
              <div class="welcome-message" >
                  <h1>Welcome to the <span class="cool-font">Astronomical Big Data Dashboard! ðŸš€ðŸŒŒ</span></h1>
                </h1>
              </div>
              <div class="row" style="margin-top: 50px;">
            
                <% cards.forEach(function(card) { %>
                  <%- include("../partials/card",card) %>
                    <% }); %>
                   
              </div>

          
          <div class="row">
            <% const lastFourMessages = messages.slice(Math.max(messages.length - 4, 0)); %>
            <% lastFourMessages.forEach(function(message, index) { %>
              <% let urgencyClass = ''; %>
              <% if (message.urgency >= 4) { %>
                <% urgencyClass = 'red'; %>
              <% } %>
              <%- include("../partials/card", {
                districtId: `messageCard-${index}`,
                activity: message.activity, // Add activity field
                title: message.title,
                observatory: message.observatory, // Add observatory field
                location: message.location, // Add location field
                value: message.urgency,
                unit: 'Urgency',
                icon: 'priority_high',
                fotterIcon: 'access_time',
                fotterText: message.time,
                customClass: urgencyClass, // Apply the urgency class to the card
              }) %>
            <% }); %>
          </div>


              <!-- New Code: Display the table with the 5 first lines of asteroids data -->
              <div class="col-md-12" style="margin-top: 60px;">
                <div class="card">
                  <div class="card-header card-header-primary">
                    <h4 class="card-title">Asteroids</h4>
                    <p class="card-category">List of asteroids from NASA</p>
                  </div>
                  <div class="card-body">
                    <div class="table-responsive">
                      <table class="table">
                        <thead class="text-primary">
                          <th>Id</th>
                          <th>Name</th>
                          <th>Magnitude (mag)</th>
                          <th>Diameter (m)</th>
                          <th>Close Approach Date</th>
                          <th>Distance to Earth (km)</th>
                          <th>Velocity (km/s)</th>
                        </thead>
                        <tbody id="asteroidsTableBody">
                          <!-- Table rows will be added here using JavaScript -->
                          <% asteroids.slice(0, 5).forEach(function(asteroid) { %>
                            <tr>
                              <td><%= asteroid.id %></td>
                              <td><%= asteroid.name %></td>
                              <td><%= asteroid.absolute_magnitude_h.toFixed(2) %></td>
                              <td><%= asteroid.estimated_diameter.meters.estimated_diameter_min.toFixed(0) %> - <%= asteroid.estimated_diameter.meters.estimated_diameter_max.toFixed(0) %> m</td>
                              <td><%= asteroid.close_approach_data[0].close_approach_date_full %></td>
                              <td><%= asteroid.close_approach_data[0].miss_distance.kilometers %></td>
                              <td><%= asteroid.close_approach_data[0].relative_velocity.kilometers_per_second %></td>
                            </tr>
                          <% }); %>
                        </tbody>
                      </table>
                    </div>
                  </div>
                </div>
              </div>

              <div class="row" style="margin-top: 60px;">
                <div class="col-md-6">
                  <%- include("../partials/graphEvents") %>
                </div>
                <div class="col-md-6">
                  <%- include("../partials/graphEventsB") %>
                </div>
              </div>
              <div class="col-md-12" style="margin-top: 60px;">
                  <%- include("../partials/graphAsteroids") %>
                </div>
            </div>
          </div>
      </div>
  </div>

  <!-- JavaScript to fetch and update the asteroids table -->
  <script>
    // Function to update the asteroids table
    function updateAsteroidsTable(asteroids) {
      const tableBody = document.getElementById('asteroidsTableBody');
      tableBody.innerHTML = '';

      asteroids.slice(0, 5).forEach((asteroid) => {
        const newRow = document.createElement('tr');
        newRow.innerHTML = `
          <td>${asteroid.id}</td>
          <td>${asteroid.name}</td>
          <td>${asteroid.absolute_magnitude_h.toFixed(2)}</td>
          <td>${asteroid.estimated_diameter.meters.estimated_diameter_min.toFixed(0)} - ${asteroid.estimated_diameter.meters.estimated_diameter_max.toFixed(0)} m</td>
          <td>${asteroid.close_approach_data[0].close_approach_date_full}</td>
          <td>${asteroid.close_approach_data[0].miss_distance.kilometers}</td>
          <td>${asteroid.close_approach_data[0].relative_velocity.kilometers_per_second}</td>
        `;
        tableBody.appendChild(newRow);
      });
    }

    // Function to fetch the asteroids data from the server and update the table
    function fetchAsteroidsData() {
      fetch('/asteroids')
        .then((response) => response.json())
        .then((data) => {
          const asteroids = data.asteroids;
          updateAsteroidsTable(asteroids);
        })
        .catch((error) => {
          console.error('Error fetching asteroids:', error);
        });
    }

    // WebSocket setup after connecting to the server
    function setWs() {
      var socket = io.connect();
      socket.on('newdata', function (msg) {
        var element = document.getElementById(msg.districtId);
        element.innerText = msg.value;
      });
    }

    // Add an event listener to call fetchAsteroidsData when the page has finished loading
    window.addEventListener('load', () => {
      fetchAsteroidsData();
      setWs();
    });
  </script>

</body>

</html>
